import math

# Returns a number between 0 and 1
def segm(x):
    return 1/(1+math.exp(-x))

# multiply two matrices [hor].[ver]
def dot(m1, m2):
    m3=[]
    for j in range(len(m1)):
        nrx=0
        for i in range(len(m2)):
            nrx += m1[j][i]*m2[i]
        m3.append(segm(nrx))
    return m3

# layer(nodes, inputs)
con1 = [[-1.6971515515579403, -1.9418659386861972], [-1.6311181559088961, -1.9652854604974739], [-0.87978988032517769, -0.68970459042936305], [1.1232843444124765, 1.0699052082773028], [1.6122171353951391, 1.8452334897159377], [1.2577492871702562, 1.7051041296432978], [0.47857417656879109, 0.30138358170372326], [0.2693981258287429, -0.86571325199003912], [-1.3795734158446369, -1.6438126607432444], [-1.5615105711779145, -1.8601967153799435], [1.3931343300907533, 1.7488432052072125], [1.0060187501888711, 1.7229869447784598], [1.5606418325983309, 1.8394821671052259], [-0.9996584907087801, -1.3408622809892565], [0.94008164652802884, 1.0341329848921805], [1.5635406814290544, 1.561450187152879], [-1.696498311436234, -1.9535759452926558], [-1.2395480679552788, -1.3286161197433008], [1.7058140746301815, 1.8744139597041038], [-1.7465323634530652, -1.8860379387540749]]
con2 = [[-5.9255756958123698, -0.98999999999999999, -0.069999999999999951, 0.16999999999999993, 0.78000000000000003, 0.48999999999999999, 0.020000000000000018, -0.13, -0.43999999999999995, -0.78000000000000003, 0.6100000000000001, 0.39999999999999991, 0.78000000000000003, -0.16000000000000003, 0.28000000000000003, 0.55000000000000004, -0.91000000000000003, -0.28000000000000003, 0.60000000000000009, -0.91000000000000003]]

while True:
    data = []
    for i in range(len(con1[0])):
        data.append(float(input("Input: ")))
    
    # Get the values of layer 1 and 2
    l1 = dot(con1, data)
    l2 = dot(con2, l1)
    
    print("Output:", "{:.1f}".format(l2[0]), "\n", "-"*10)